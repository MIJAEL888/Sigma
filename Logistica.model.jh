entity Equipo{
    codigoEquipo String required,
    serie String required,
    calibradoDesde LocalDate,
    calibradoHasta LocalDate,
    rutaDocCalibracion String,
    nombreDocCalibracion String,
    documentoCalibracion Blob,
    estado EstadoEquipo,
    fechaCompra LocalDate,
    observacion TextBlob,
    comentario TextBlob,
    test AnyBlob
}

entity TipoEquipo{
    nombre String required,
    codigo String,
    descripcion TextBlob
}

entity Modelo{
    nombre String required,
    descripcion TextBlob
}

entity Marca{
    nombre String required
    descripcion TextBlob
}

enum EstadoEquipo{
    CALIBRADO, MANTENIMIENTO, BAJA 
}

entity Laboratorio{
    razonSocial String required,
    direccion String required,
    ruc String required,
    acreditadoPor String,
    numeroAcreditacion String,
    rutaDocAcreditacion String,
    nombreDocAcreditacion String,
    documentoAcreditacion Blob,
    vigenciaDesde LocalDate,
    vigenciaHasta LocalDate
    telefono String,
    correo String,
    nombreContacto String,
    fechaCreacion LocalDate
}

entity Monitorista{
    nombre String required,
    apellidoPaterno String required,
    apellidoMaterno String required,
    dni String required,
    fechaNacimiento LocalDate
}

entity TipoSeguro{
    nombre String required,
    descripcion TextBlob,
    fechaCaudicidad LocalDate,
    codigoTipoSeguro Integer
}

/**
 * One to many relationship.
 */
relationship OneToMany {
    Marca{modelo} to Modelo,
    Modelo{equipo} to Equipo{modelo},
    TipoEquipo{modelo} to Modelo{tipoEuipo},
    Laboratorio{laboratorio} to Monitorista
}

relationship ManyToMany {
	Monitorista{tipoSeguro} to TipoSeguro{monitorista}
}

microservice * with logistica
paginate Equipo, Laboratorio, Monitorista  with pagination
paginate Modelo, Marca, TipoEquipo with infinite-scroll